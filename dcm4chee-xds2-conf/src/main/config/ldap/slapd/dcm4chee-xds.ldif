# dcm4chee-xds extensions of the DICOM Application Configuration Data Model Hierarchy LDAP Schema
dn: cn=dcm4che-xds,cn=schema,cn=config
objectClass: olcSchemaConfig
cn: dcm4che-xds
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.1
  NAME 'xdsApplicationName'
  DESC 'XDS Application name'
  EQUALITY caseExactMatch
  SUBSTR caseExactSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.2 NAME 'xdsAffinityDomain'
  DESC 'Affinity Domain given as Universal Entity ID and Universal Entity ID Type ISO (e.g.: 1.2.3.4.5&ISO)'
  EQUALITY caseExactMatch
  SUBSTR caseExactSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.3 NAME 'xdsAcceptedMimeTypes'
  DESC 'Accepted MIME types in the affinity domain'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.4 NAME 'xdsSoapMsgLogDir'
  DESC 'Log directory where request and response SOAP messages are stored'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.5 NAME 'xdsCreateMissingPIDs'
  DESC 'Specifies to create Patient IDs that are not yet known. (not conform to XDS specification!)'
  EQUALITY booleanMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.6 NAME 'xdsCreateMissingCodes'
  DESC 'Specifies to create Codes that are not known in the Affinity Domain. (not conform to XDS specification!)'
  EQUALITY booleanMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.7 NAME 'xdsDontSaveCodeClassifications'
  DESC 'Specifies to save codes only as XDSCode entities and not as Classifications in ebRIM format'
  EQUALITY booleanMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.8 NAME 'xdsCheckAffinityDomain'
  DESC 'Check affinityDomain in received PatientIDs (Patient feed and preMetadataCheck)'
  EQUALITY booleanMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.9 NAME 'xdsCheckMimetype'
  DESC 'Enable check mimetype'
  EQUALITY booleanMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.10 NAME 'xdsPreMetadataCheck'
  DESC 'Check metadta before processing the PnR request. (to get correct error (XDSPatientIdDoesNotMatch instead of XDSUnknownPatientId) in pre-connectathon tests)'
  EQUALITY booleanMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.20 NAME 'xdsRepositoryUID'
  DESC 'Unique ID of XDS.b Repository'
  EQUALITY caseExactMatch
  SUBSTR caseExactSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  SINGLE-VALUE )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.21 NAME 'xdsRegistryURL'
  DESC 'Registry URL which is used by Repository to register document.'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: ( 1.2.40.0.13.1.15.20.3.22 NAME 'xdsLogFullMessageHosts'
  DESC 'Host name for which the full message (with documents) should be logged instead of SOAPpart'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcObjectClasses: ( 1.2.40.0.13.1.15.20.4.1 NAME 'xdsRegistry'
  DESC 'XDS Registry information'
  SUP top STRUCTURAL
  MUST (
    cn $ 
    xdsApplicationName $
    xdsAffinityDomain )
  MAY (
    xdsAcceptedMimeTypes $
    xdsSoapMsgLogDir $
    xdsCreateMissingPIDs $
    xdsCreateMissingCodes $
    xdsDontSaveCodeClassifications $
    xdsCheckAffinityDomain $
    xdsCheckMimetype $
    xdsPreMetadataCheck ) )
olcObjectClasses: ( 1.2.40.0.13.1.15.20.4.2 NAME 'xdsRepository'
  DESC 'XDS Repository information'
  SUP top STRUCTURAL
  MUST ( 
    cn $
    xdsApplicationName $
    xdsRegistryURL $
    xdsRepositoryUID )
  MAY (
    xdsAcceptedMimeTypes $
    xdsCheckMimetype $
    xdsSoapMsgLogDir $
    xdsLogFullMessageHosts ) )
